create table "public"."company" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "logo_path" text,
    "name" text not null,
    "company_number" text not null,
    "address" text not null,
    "phone_number" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."company" enable row level security;

create table "public"."council_application" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "taxi_id" bigint not null,
    "document_path" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."council_application" enable row level security;

create table "public"."council_application_receipt" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "taxi_id" bigint not null,
    "document_path" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."council_application_receipt" enable row level security;

create table "public"."driver" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "picture_path" text,
    "name" text not null,
    "phone_number" text,
    "email" text,
    "date_of_birth" date,
    "national_insurance_number" text,
    "is_retired" boolean not null default false,
    "created_at" timestamp with time zone not null default now(),
    "active_hire_agreement_id" bigint,
    "active_insurance_id" bigint,
    "active_drivers_licence_id" bigint,
    "active_drivers_taxi_badge_id" bigint
);


alter table "public"."driver" enable row level security;

create table "public"."driver_application" (
    "id" uuid not null default uuid_generate_v4(),
    "company_name" text not null,
    "picture_path" text,
    "name" text not null,
    "phone_number" text,
    "email" text,
    "date_of_birth" date,
    "national_insurance_number" text,
    "drivers_licence_path" text,
    "drivers_licence_number" text not null,
    "drivers_licence_start_date" date not null,
    "drivers_licence_end_date" date not null,
    "taxi_badge_path" text,
    "taxi_badge_number" text not null,
    "taxi_badge_start_date" date not null,
    "taxi_badge_end_date" date not null,
    "is_submitted" boolean not null default false,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."driver_application" enable row level security;

create table "public"."drivers_licence" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "driver_id" bigint not null,
    "document_path" text,
    "licence_number" text not null,
    "start_date" date not null,
    "end_date" date not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."drivers_licence" enable row level security;

create table "public"."drivers_taxi_badge" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "driver_id" bigint not null,
    "document_path" text,
    "badge_number" text not null,
    "start_date" date,
    "end_date" date not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."drivers_taxi_badge" enable row level security;

create table "public"."employee" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "company_id" bigint not null,
    "picture_path" text,
    "name" text not null,
    "phone_number" text,
    "email" text not null,
    "date_of_birth" date not null,
    "national_insurance_number" text not null,
    "signature_path" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."employee" enable row level security;

create table "public"."hire_agreement" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "taxi_id" bigint not null,
    "driver_id" bigint not null,
    "permission_letter_document_path" text,
    "contract_document_path" text,
    "start_date" date not null,
    "end_date" date,
    "rent_amount" numeric(12,2) not null,
    "deposit_amount" numeric(12,2) not null,
    "deposit_receipt_document_path" text,
    "is_retired" boolean not null default false,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."hire_agreement" enable row level security;

create table "public"."insurance" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "taxi_id" bigint not null,
    "driver_id" bigint,
    "document_path" text,
    "policy_number" text not null,
    "is_any_driver" boolean not null,
    "start_date" date not null,
    "end_date" date not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."insurance" enable row level security;

create table "public"."picture" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "hire_id" bigint not null,
    "picture_path" text not null,
    "is_before_hire" boolean not null default true,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."picture" enable row level security;

create table "public"."rent" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "hire_id" bigint not null,
    "receipt_document_path" text,
    "start_date" date not null,
    "end_date" date not null,
    "amount" numeric(12,2) not null,
    "is_paid" boolean not null default false,
    "paid_date" date null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."rent" enable row level security;

create table "public"."taxi" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "picture_path" text,
    "logbook_document_path" text,
    "number_plate" text not null,
    "colour" text not null,
    "chassis_number" text not null,
    "registration_date" date,
    "expected_expiry_date" date,
    "road_tax_expiry_date" date,
    "is_retired" boolean not null default false,
    "created_at" timestamp with time zone not null default now(),
    "vehicle_id" bigint not null,
    "active_hire_agreement_id" bigint,
    "active_insurance_id" bigint,
    "active_taxi_licence_id" bigint
);


alter table "public"."taxi" enable row level security;

create table "public"."taxi_licence" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "taxi_id" bigint not null,
    "compliance_certificate_document_path" text,
    "compliance_certificate_licence_number" text not null,
    "phc_licence_document_path" text,
    "phc_number" text not null,
    "start_date" date,
    "end_date" date not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."taxi_licence" enable row level security;

create table "public"."vehicle" (
    "id" bigint generated by default as identity not null,
    "auth_id" uuid not null default auth.uid(),
    "make" text not null,
    "model" text not null,
    "cc" smallint,
    "fuel_type" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."vehicle" enable row level security;

CREATE INDEX company_auth_id_index ON public.company USING btree (auth_id);

CREATE UNIQUE INDEX company_pkey ON public.company USING btree (id);

CREATE INDEX council_application_auth_id_index ON public.council_application USING btree (auth_id);

CREATE UNIQUE INDEX council_application_pkey ON public.council_application USING btree (id);

CREATE INDEX council_application_receipt_auth_id_index ON public.council_application_receipt USING btree (auth_id);

CREATE UNIQUE INDEX council_application_receipt_pkey ON public.council_application_receipt USING btree (id);

CREATE INDEX council_application_receipt_taxi_id_index ON public.council_application_receipt USING btree (taxi_id);

CREATE INDEX council_application_taxi_id_index ON public.council_application USING btree (taxi_id);

CREATE UNIQUE INDEX driver_application_pkey ON public.driver_application USING btree (id);

CREATE INDEX driver_auth_id_index ON public.driver USING btree (auth_id);

CREATE UNIQUE INDEX driver_pkey ON public.driver USING btree (id);

CREATE INDEX drivers_licence_auth_id_index ON public.drivers_licence USING btree (auth_id);

CREATE INDEX drivers_licence_driver_id_index ON public.drivers_licence USING btree (driver_id);

CREATE UNIQUE INDEX drivers_licence_pkey ON public.drivers_licence USING btree (id);

CREATE INDEX drivers_taxi_badge_auth_id_index ON public.drivers_taxi_badge USING btree (auth_id);

CREATE INDEX drivers_taxi_badge_driver_id_index ON public.drivers_taxi_badge USING btree (driver_id);

CREATE UNIQUE INDEX drivers_taxi_badge_pkey ON public.drivers_taxi_badge USING btree (id);

CREATE INDEX employee_auth_id_index ON public.employee USING btree (auth_id);

CREATE UNIQUE INDEX employee_pkey ON public.employee USING btree (id);

CREATE INDEX hire_agreement_auth_id_index ON public.hire_agreement USING btree (auth_id);

CREATE INDEX hire_agreement_driver_id_index ON public.hire_agreement USING btree (driver_id);

CREATE UNIQUE INDEX hire_agreement_pkey ON public.hire_agreement USING btree (id);

CREATE INDEX hire_agreement_taxi_id_index ON public.hire_agreement USING btree (taxi_id);

CREATE INDEX insurance_auth_id_index ON public.insurance USING btree (auth_id);

CREATE INDEX insurance_driver_id_index ON public.insurance USING btree (driver_id);

CREATE UNIQUE INDEX insurance_pkey ON public.insurance USING btree (id);

CREATE INDEX insurance_taxi_id_index ON public.insurance USING btree (taxi_id);

CREATE INDEX picture_auth_id_index ON public.picture USING btree (auth_id);

CREATE INDEX picture_hire_id_index ON public.picture USING btree (hire_id);

CREATE UNIQUE INDEX picture_pkey ON public.picture USING btree (id);

CREATE INDEX rent_auth_id_index ON public.rent USING btree (auth_id);

CREATE INDEX rent_hire_id_index ON public.rent USING btree (hire_id);

CREATE UNIQUE INDEX rent_pkey ON public.rent USING btree (id);

CREATE INDEX taxi_auth_id_index ON public.taxi USING btree (auth_id);

CREATE INDEX taxi_licence_auth_id_index ON public.taxi_licence USING btree (auth_id);

CREATE UNIQUE INDEX taxi_licence_pkey ON public.taxi_licence USING btree (id);

CREATE INDEX taxi_licence_taxi_id_index ON public.taxi_licence USING btree (taxi_id);

CREATE UNIQUE INDEX taxi_pkey ON public.taxi USING btree (id);

CREATE INDEX vehicle_auth_id_index ON public.vehicle USING btree (auth_id);

CREATE UNIQUE INDEX vehicle_pkey ON public.vehicle USING btree (id);

alter table "public"."company" add constraint "company_pkey" PRIMARY KEY using index "company_pkey";

alter table "public"."council_application" add constraint "council_application_pkey" PRIMARY KEY using index "council_application_pkey";

alter table "public"."council_application_receipt" add constraint "council_application_receipt_pkey" PRIMARY KEY using index "council_application_receipt_pkey";

alter table "public"."driver" add constraint "driver_pkey" PRIMARY KEY using index "driver_pkey";

alter table "public"."driver_application" add constraint "driver_application_pkey" PRIMARY KEY using index "driver_application_pkey";

alter table "public"."drivers_licence" add constraint "drivers_licence_pkey" PRIMARY KEY using index "drivers_licence_pkey";

alter table "public"."drivers_taxi_badge" add constraint "drivers_taxi_badge_pkey" PRIMARY KEY using index "drivers_taxi_badge_pkey";

alter table "public"."employee" add constraint "employee_pkey" PRIMARY KEY using index "employee_pkey";

alter table "public"."hire_agreement" add constraint "hire_agreement_pkey" PRIMARY KEY using index "hire_agreement_pkey";

alter table "public"."insurance" add constraint "insurance_pkey" PRIMARY KEY using index "insurance_pkey";

alter table "public"."picture" add constraint "picture_pkey" PRIMARY KEY using index "picture_pkey";

alter table "public"."rent" add constraint "rent_pkey" PRIMARY KEY using index "rent_pkey";

alter table "public"."taxi" add constraint "taxi_pkey" PRIMARY KEY using index "taxi_pkey";

alter table "public"."taxi_licence" add constraint "taxi_licence_pkey" PRIMARY KEY using index "taxi_licence_pkey";

alter table "public"."vehicle" add constraint "vehicle_pkey" PRIMARY KEY using index "vehicle_pkey";

alter table "public"."company" add constraint "company_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."company" validate constraint "company_auth_id_fkey";

alter table "public"."council_application" add constraint "council_application_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."council_application" validate constraint "council_application_auth_id_fkey";

alter table "public"."council_application" add constraint "council_application_taxi_id_fkey" FOREIGN KEY (taxi_id) REFERENCES taxi(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."council_application" validate constraint "council_application_taxi_id_fkey";

alter table "public"."council_application_receipt" add constraint "council_application_receipt_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."council_application_receipt" validate constraint "council_application_receipt_auth_id_fkey";

alter table "public"."council_application_receipt" add constraint "council_application_receipt_taxi_id_fkey" FOREIGN KEY (taxi_id) REFERENCES taxi(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."council_application_receipt" validate constraint "council_application_receipt_taxi_id_fkey";

alter table "public"."driver" add constraint "driver_active_drivers_licence_id_fkey" FOREIGN KEY (active_drivers_licence_id) REFERENCES drivers_licence(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."driver" validate constraint "driver_active_drivers_licence_id_fkey";

alter table "public"."driver" add constraint "driver_active_drivers_taxi_badge_id_fkey" FOREIGN KEY (active_drivers_taxi_badge_id) REFERENCES drivers_taxi_badge(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."driver" validate constraint "driver_active_drivers_taxi_badge_id_fkey";

alter table "public"."driver" add constraint "driver_active_hire_agreement_id_fkey" FOREIGN KEY (active_hire_agreement_id) REFERENCES hire_agreement(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."driver" validate constraint "driver_active_hire_agreement_id_fkey";

alter table "public"."driver" add constraint "driver_active_insurance_id_fkey" FOREIGN KEY (active_insurance_id) REFERENCES insurance(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."driver" validate constraint "driver_active_insurance_id_fkey";

alter table "public"."driver" add constraint "driver_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."driver" validate constraint "driver_auth_id_fkey";

alter table "public"."drivers_licence" add constraint "drivers_licence_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."drivers_licence" validate constraint "drivers_licence_auth_id_fkey";

alter table "public"."drivers_licence" add constraint "drivers_licence_driver_id_fkey" FOREIGN KEY (driver_id) REFERENCES driver(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."drivers_licence" validate constraint "drivers_licence_driver_id_fkey";

alter table "public"."drivers_taxi_badge" add constraint "drivers_taxi_badge_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."drivers_taxi_badge" validate constraint "drivers_taxi_badge_auth_id_fkey";

alter table "public"."drivers_taxi_badge" add constraint "drivers_taxi_badge_driver_id_fkey" FOREIGN KEY (driver_id) REFERENCES driver(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."drivers_taxi_badge" validate constraint "drivers_taxi_badge_driver_id_fkey";

alter table "public"."employee" add constraint "employee_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."employee" validate constraint "employee_auth_id_fkey";

alter table "public"."employee" add constraint "employee_company_id_fkey" FOREIGN KEY (company_id) REFERENCES company(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."employee" validate constraint "employee_company_id_fkey";

alter table "public"."hire_agreement" add constraint "hire_agreement_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."hire_agreement" validate constraint "hire_agreement_auth_id_fkey";

alter table "public"."hire_agreement" add constraint "hire_agreement_driver_id_fkey" FOREIGN KEY (driver_id) REFERENCES driver(id) ON UPDATE CASCADE not valid;

alter table "public"."hire_agreement" validate constraint "hire_agreement_driver_id_fkey";

alter table "public"."hire_agreement" add constraint "hire_agreement_taxi_id_fkey" FOREIGN KEY (taxi_id) REFERENCES taxi(id) ON UPDATE CASCADE not valid;

alter table "public"."hire_agreement" validate constraint "hire_agreement_taxi_id_fkey";

alter table "public"."insurance" add constraint "insurance_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."insurance" validate constraint "insurance_auth_id_fkey";

alter table "public"."insurance" add constraint "insurance_driver_id_fkey" FOREIGN KEY (driver_id) REFERENCES driver(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."insurance" validate constraint "insurance_driver_id_fkey";

alter table "public"."insurance" add constraint "insurance_taxi_id_fkey" FOREIGN KEY (taxi_id) REFERENCES taxi(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."insurance" validate constraint "insurance_taxi_id_fkey";

alter table "public"."picture" add constraint "picture_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."picture" validate constraint "picture_auth_id_fkey";

alter table "public"."picture" add constraint "picture_hire_id_fkey" FOREIGN KEY (hire_id) REFERENCES hire_agreement(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."picture" validate constraint "picture_hire_id_fkey";

alter table "public"."rent" add constraint "rent_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."rent" validate constraint "rent_auth_id_fkey";

alter table "public"."rent" add constraint "rent_hire_id_fkey" FOREIGN KEY (hire_id) REFERENCES hire_agreement(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."rent" validate constraint "rent_hire_id_fkey";

alter table "public"."taxi" add constraint "taxi_active_hire_agreement_id_fkey" FOREIGN KEY (active_hire_agreement_id) REFERENCES hire_agreement(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."taxi" validate constraint "taxi_active_hire_agreement_id_fkey";

alter table "public"."taxi" add constraint "taxi_active_insurance_id_fkey" FOREIGN KEY (active_insurance_id) REFERENCES insurance(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."taxi" validate constraint "taxi_active_insurance_id_fkey";

alter table "public"."taxi" add constraint "taxi_active_taxi_licence_id_fkey" FOREIGN KEY (active_taxi_licence_id) REFERENCES taxi_licence(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."taxi" validate constraint "taxi_active_taxi_licence_id_fkey";

alter table "public"."taxi" add constraint "taxi_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."taxi" validate constraint "taxi_auth_id_fkey";

alter table "public"."taxi" add constraint "taxi_vehicle_id_fkey" FOREIGN KEY (vehicle_id) REFERENCES vehicle(id) ON UPDATE CASCADE not valid;

alter table "public"."taxi" validate constraint "taxi_vehicle_id_fkey";

alter table "public"."taxi_licence" add constraint "taxi_licence_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."taxi_licence" validate constraint "taxi_licence_auth_id_fkey";

alter table "public"."taxi_licence" add constraint "taxi_licence_taxi_id_fkey" FOREIGN KEY (taxi_id) REFERENCES taxi(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."taxi_licence" validate constraint "taxi_licence_taxi_id_fkey";

alter table "public"."vehicle" add constraint "vehiclee_auth_id_fkey" FOREIGN KEY (auth_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."vehicle" validate constraint "vehiclee_auth_id_fkey";

grant delete on table "public"."company" to "anon";

grant insert on table "public"."company" to "anon";

grant references on table "public"."company" to "anon";

grant select on table "public"."company" to "anon";

grant trigger on table "public"."company" to "anon";

grant truncate on table "public"."company" to "anon";

grant update on table "public"."company" to "anon";

grant delete on table "public"."company" to "authenticated";

grant insert on table "public"."company" to "authenticated";

grant references on table "public"."company" to "authenticated";

grant select on table "public"."company" to "authenticated";

grant trigger on table "public"."company" to "authenticated";

grant truncate on table "public"."company" to "authenticated";

grant update on table "public"."company" to "authenticated";

grant delete on table "public"."company" to "service_role";

grant insert on table "public"."company" to "service_role";

grant references on table "public"."company" to "service_role";

grant select on table "public"."company" to "service_role";

grant trigger on table "public"."company" to "service_role";

grant truncate on table "public"."company" to "service_role";

grant update on table "public"."company" to "service_role";

grant delete on table "public"."council_application" to "anon";

grant insert on table "public"."council_application" to "anon";

grant references on table "public"."council_application" to "anon";

grant select on table "public"."council_application" to "anon";

grant trigger on table "public"."council_application" to "anon";

grant truncate on table "public"."council_application" to "anon";

grant update on table "public"."council_application" to "anon";

grant delete on table "public"."council_application" to "authenticated";

grant insert on table "public"."council_application" to "authenticated";

grant references on table "public"."council_application" to "authenticated";

grant select on table "public"."council_application" to "authenticated";

grant trigger on table "public"."council_application" to "authenticated";

grant truncate on table "public"."council_application" to "authenticated";

grant update on table "public"."council_application" to "authenticated";

grant delete on table "public"."council_application" to "service_role";

grant insert on table "public"."council_application" to "service_role";

grant references on table "public"."council_application" to "service_role";

grant select on table "public"."council_application" to "service_role";

grant trigger on table "public"."council_application" to "service_role";

grant truncate on table "public"."council_application" to "service_role";

grant update on table "public"."council_application" to "service_role";

grant delete on table "public"."council_application_receipt" to "anon";

grant insert on table "public"."council_application_receipt" to "anon";

grant references on table "public"."council_application_receipt" to "anon";

grant select on table "public"."council_application_receipt" to "anon";

grant trigger on table "public"."council_application_receipt" to "anon";

grant truncate on table "public"."council_application_receipt" to "anon";

grant update on table "public"."council_application_receipt" to "anon";

grant delete on table "public"."council_application_receipt" to "authenticated";

grant insert on table "public"."council_application_receipt" to "authenticated";

grant references on table "public"."council_application_receipt" to "authenticated";

grant select on table "public"."council_application_receipt" to "authenticated";

grant trigger on table "public"."council_application_receipt" to "authenticated";

grant truncate on table "public"."council_application_receipt" to "authenticated";

grant update on table "public"."council_application_receipt" to "authenticated";

grant delete on table "public"."council_application_receipt" to "service_role";

grant insert on table "public"."council_application_receipt" to "service_role";

grant references on table "public"."council_application_receipt" to "service_role";

grant select on table "public"."council_application_receipt" to "service_role";

grant trigger on table "public"."council_application_receipt" to "service_role";

grant truncate on table "public"."council_application_receipt" to "service_role";

grant update on table "public"."council_application_receipt" to "service_role";

grant delete on table "public"."driver" to "anon";

grant insert on table "public"."driver" to "anon";

grant references on table "public"."driver" to "anon";

grant select on table "public"."driver" to "anon";

grant trigger on table "public"."driver" to "anon";

grant truncate on table "public"."driver" to "anon";

grant update on table "public"."driver" to "anon";

grant delete on table "public"."driver" to "authenticated";

grant insert on table "public"."driver" to "authenticated";

grant references on table "public"."driver" to "authenticated";

grant select on table "public"."driver" to "authenticated";

grant trigger on table "public"."driver" to "authenticated";

grant truncate on table "public"."driver" to "authenticated";

grant update on table "public"."driver" to "authenticated";

grant delete on table "public"."driver" to "service_role";

grant insert on table "public"."driver" to "service_role";

grant references on table "public"."driver" to "service_role";

grant select on table "public"."driver" to "service_role";

grant trigger on table "public"."driver" to "service_role";

grant truncate on table "public"."driver" to "service_role";

grant update on table "public"."driver" to "service_role";

grant delete on table "public"."driver_application" to "anon";

grant insert on table "public"."driver_application" to "anon";

grant references on table "public"."driver_application" to "anon";

grant select on table "public"."driver_application" to "anon";

grant trigger on table "public"."driver_application" to "anon";

grant truncate on table "public"."driver_application" to "anon";

grant update on table "public"."driver_application" to "anon";

grant delete on table "public"."driver_application" to "authenticated";

grant insert on table "public"."driver_application" to "authenticated";

grant references on table "public"."driver_application" to "authenticated";

grant select on table "public"."driver_application" to "authenticated";

grant trigger on table "public"."driver_application" to "authenticated";

grant truncate on table "public"."driver_application" to "authenticated";

grant update on table "public"."driver_application" to "authenticated";

grant delete on table "public"."driver_application" to "service_role";

grant insert on table "public"."driver_application" to "service_role";

grant references on table "public"."driver_application" to "service_role";

grant select on table "public"."driver_application" to "service_role";

grant trigger on table "public"."driver_application" to "service_role";

grant truncate on table "public"."driver_application" to "service_role";

grant update on table "public"."driver_application" to "service_role";

grant delete on table "public"."drivers_licence" to "anon";

grant insert on table "public"."drivers_licence" to "anon";

grant references on table "public"."drivers_licence" to "anon";

grant select on table "public"."drivers_licence" to "anon";

grant trigger on table "public"."drivers_licence" to "anon";

grant truncate on table "public"."drivers_licence" to "anon";

grant update on table "public"."drivers_licence" to "anon";

grant delete on table "public"."drivers_licence" to "authenticated";

grant insert on table "public"."drivers_licence" to "authenticated";

grant references on table "public"."drivers_licence" to "authenticated";

grant select on table "public"."drivers_licence" to "authenticated";

grant trigger on table "public"."drivers_licence" to "authenticated";

grant truncate on table "public"."drivers_licence" to "authenticated";

grant update on table "public"."drivers_licence" to "authenticated";

grant delete on table "public"."drivers_licence" to "service_role";

grant insert on table "public"."drivers_licence" to "service_role";

grant references on table "public"."drivers_licence" to "service_role";

grant select on table "public"."drivers_licence" to "service_role";

grant trigger on table "public"."drivers_licence" to "service_role";

grant truncate on table "public"."drivers_licence" to "service_role";

grant update on table "public"."drivers_licence" to "service_role";

grant delete on table "public"."drivers_taxi_badge" to "anon";

grant insert on table "public"."drivers_taxi_badge" to "anon";

grant references on table "public"."drivers_taxi_badge" to "anon";

grant select on table "public"."drivers_taxi_badge" to "anon";

grant trigger on table "public"."drivers_taxi_badge" to "anon";

grant truncate on table "public"."drivers_taxi_badge" to "anon";

grant update on table "public"."drivers_taxi_badge" to "anon";

grant delete on table "public"."drivers_taxi_badge" to "authenticated";

grant insert on table "public"."drivers_taxi_badge" to "authenticated";

grant references on table "public"."drivers_taxi_badge" to "authenticated";

grant select on table "public"."drivers_taxi_badge" to "authenticated";

grant trigger on table "public"."drivers_taxi_badge" to "authenticated";

grant truncate on table "public"."drivers_taxi_badge" to "authenticated";

grant update on table "public"."drivers_taxi_badge" to "authenticated";

grant delete on table "public"."drivers_taxi_badge" to "service_role";

grant insert on table "public"."drivers_taxi_badge" to "service_role";

grant references on table "public"."drivers_taxi_badge" to "service_role";

grant select on table "public"."drivers_taxi_badge" to "service_role";

grant trigger on table "public"."drivers_taxi_badge" to "service_role";

grant truncate on table "public"."drivers_taxi_badge" to "service_role";

grant update on table "public"."drivers_taxi_badge" to "service_role";

grant delete on table "public"."employee" to "anon";

grant insert on table "public"."employee" to "anon";

grant references on table "public"."employee" to "anon";

grant select on table "public"."employee" to "anon";

grant trigger on table "public"."employee" to "anon";

grant truncate on table "public"."employee" to "anon";

grant update on table "public"."employee" to "anon";

grant delete on table "public"."employee" to "authenticated";

grant insert on table "public"."employee" to "authenticated";

grant references on table "public"."employee" to "authenticated";

grant select on table "public"."employee" to "authenticated";

grant trigger on table "public"."employee" to "authenticated";

grant truncate on table "public"."employee" to "authenticated";

grant update on table "public"."employee" to "authenticated";

grant delete on table "public"."employee" to "service_role";

grant insert on table "public"."employee" to "service_role";

grant references on table "public"."employee" to "service_role";

grant select on table "public"."employee" to "service_role";

grant trigger on table "public"."employee" to "service_role";

grant truncate on table "public"."employee" to "service_role";

grant update on table "public"."employee" to "service_role";

grant delete on table "public"."hire_agreement" to "anon";

grant insert on table "public"."hire_agreement" to "anon";

grant references on table "public"."hire_agreement" to "anon";

grant select on table "public"."hire_agreement" to "anon";

grant trigger on table "public"."hire_agreement" to "anon";

grant truncate on table "public"."hire_agreement" to "anon";

grant update on table "public"."hire_agreement" to "anon";

grant delete on table "public"."hire_agreement" to "authenticated";

grant insert on table "public"."hire_agreement" to "authenticated";

grant references on table "public"."hire_agreement" to "authenticated";

grant select on table "public"."hire_agreement" to "authenticated";

grant trigger on table "public"."hire_agreement" to "authenticated";

grant truncate on table "public"."hire_agreement" to "authenticated";

grant update on table "public"."hire_agreement" to "authenticated";

grant delete on table "public"."hire_agreement" to "service_role";

grant insert on table "public"."hire_agreement" to "service_role";

grant references on table "public"."hire_agreement" to "service_role";

grant select on table "public"."hire_agreement" to "service_role";

grant trigger on table "public"."hire_agreement" to "service_role";

grant truncate on table "public"."hire_agreement" to "service_role";

grant update on table "public"."hire_agreement" to "service_role";

grant delete on table "public"."insurance" to "anon";

grant insert on table "public"."insurance" to "anon";

grant references on table "public"."insurance" to "anon";

grant select on table "public"."insurance" to "anon";

grant trigger on table "public"."insurance" to "anon";

grant truncate on table "public"."insurance" to "anon";

grant update on table "public"."insurance" to "anon";

grant delete on table "public"."insurance" to "authenticated";

grant insert on table "public"."insurance" to "authenticated";

grant references on table "public"."insurance" to "authenticated";

grant select on table "public"."insurance" to "authenticated";

grant trigger on table "public"."insurance" to "authenticated";

grant truncate on table "public"."insurance" to "authenticated";

grant update on table "public"."insurance" to "authenticated";

grant delete on table "public"."insurance" to "service_role";

grant insert on table "public"."insurance" to "service_role";

grant references on table "public"."insurance" to "service_role";

grant select on table "public"."insurance" to "service_role";

grant trigger on table "public"."insurance" to "service_role";

grant truncate on table "public"."insurance" to "service_role";

grant update on table "public"."insurance" to "service_role";

grant delete on table "public"."picture" to "anon";

grant insert on table "public"."picture" to "anon";

grant references on table "public"."picture" to "anon";

grant select on table "public"."picture" to "anon";

grant trigger on table "public"."picture" to "anon";

grant truncate on table "public"."picture" to "anon";

grant update on table "public"."picture" to "anon";

grant delete on table "public"."picture" to "authenticated";

grant insert on table "public"."picture" to "authenticated";

grant references on table "public"."picture" to "authenticated";

grant select on table "public"."picture" to "authenticated";

grant trigger on table "public"."picture" to "authenticated";

grant truncate on table "public"."picture" to "authenticated";

grant update on table "public"."picture" to "authenticated";

grant delete on table "public"."picture" to "service_role";

grant insert on table "public"."picture" to "service_role";

grant references on table "public"."picture" to "service_role";

grant select on table "public"."picture" to "service_role";

grant trigger on table "public"."picture" to "service_role";

grant truncate on table "public"."picture" to "service_role";

grant update on table "public"."picture" to "service_role";

grant delete on table "public"."rent" to "anon";

grant insert on table "public"."rent" to "anon";

grant references on table "public"."rent" to "anon";

grant select on table "public"."rent" to "anon";

grant trigger on table "public"."rent" to "anon";

grant truncate on table "public"."rent" to "anon";

grant update on table "public"."rent" to "anon";

grant delete on table "public"."rent" to "authenticated";

grant insert on table "public"."rent" to "authenticated";

grant references on table "public"."rent" to "authenticated";

grant select on table "public"."rent" to "authenticated";

grant trigger on table "public"."rent" to "authenticated";

grant truncate on table "public"."rent" to "authenticated";

grant update on table "public"."rent" to "authenticated";

grant delete on table "public"."rent" to "service_role";

grant insert on table "public"."rent" to "service_role";

grant references on table "public"."rent" to "service_role";

grant select on table "public"."rent" to "service_role";

grant trigger on table "public"."rent" to "service_role";

grant truncate on table "public"."rent" to "service_role";

grant update on table "public"."rent" to "service_role";

grant delete on table "public"."taxi" to "anon";

grant insert on table "public"."taxi" to "anon";

grant references on table "public"."taxi" to "anon";

grant select on table "public"."taxi" to "anon";

grant trigger on table "public"."taxi" to "anon";

grant truncate on table "public"."taxi" to "anon";

grant update on table "public"."taxi" to "anon";

grant delete on table "public"."taxi" to "authenticated";

grant insert on table "public"."taxi" to "authenticated";

grant references on table "public"."taxi" to "authenticated";

grant select on table "public"."taxi" to "authenticated";

grant trigger on table "public"."taxi" to "authenticated";

grant truncate on table "public"."taxi" to "authenticated";

grant update on table "public"."taxi" to "authenticated";

grant delete on table "public"."taxi" to "service_role";

grant insert on table "public"."taxi" to "service_role";

grant references on table "public"."taxi" to "service_role";

grant select on table "public"."taxi" to "service_role";

grant trigger on table "public"."taxi" to "service_role";

grant truncate on table "public"."taxi" to "service_role";

grant update on table "public"."taxi" to "service_role";

grant delete on table "public"."taxi_licence" to "anon";

grant insert on table "public"."taxi_licence" to "anon";

grant references on table "public"."taxi_licence" to "anon";

grant select on table "public"."taxi_licence" to "anon";

grant trigger on table "public"."taxi_licence" to "anon";

grant truncate on table "public"."taxi_licence" to "anon";

grant update on table "public"."taxi_licence" to "anon";

grant delete on table "public"."taxi_licence" to "authenticated";

grant insert on table "public"."taxi_licence" to "authenticated";

grant references on table "public"."taxi_licence" to "authenticated";

grant select on table "public"."taxi_licence" to "authenticated";

grant trigger on table "public"."taxi_licence" to "authenticated";

grant truncate on table "public"."taxi_licence" to "authenticated";

grant update on table "public"."taxi_licence" to "authenticated";

grant delete on table "public"."taxi_licence" to "service_role";

grant insert on table "public"."taxi_licence" to "service_role";

grant references on table "public"."taxi_licence" to "service_role";

grant select on table "public"."taxi_licence" to "service_role";

grant trigger on table "public"."taxi_licence" to "service_role";

grant truncate on table "public"."taxi_licence" to "service_role";

grant update on table "public"."taxi_licence" to "service_role";

grant delete on table "public"."vehicle" to "anon";

grant insert on table "public"."vehicle" to "anon";

grant references on table "public"."vehicle" to "anon";

grant select on table "public"."vehicle" to "anon";

grant trigger on table "public"."vehicle" to "anon";

grant truncate on table "public"."vehicle" to "anon";

grant update on table "public"."vehicle" to "anon";

grant delete on table "public"."vehicle" to "authenticated";

grant insert on table "public"."vehicle" to "authenticated";

grant references on table "public"."vehicle" to "authenticated";

grant select on table "public"."vehicle" to "authenticated";

grant trigger on table "public"."vehicle" to "authenticated";

grant truncate on table "public"."vehicle" to "authenticated";

grant update on table "public"."vehicle" to "authenticated";

grant delete on table "public"."vehicle" to "service_role";

grant insert on table "public"."vehicle" to "service_role";

grant references on table "public"."vehicle" to "service_role";

grant select on table "public"."vehicle" to "service_role";

grant trigger on table "public"."vehicle" to "service_role";

grant truncate on table "public"."vehicle" to "service_role";

grant update on table "public"."vehicle" to "service_role";

create policy "Enable all functionality for users based on auth_id"
on "public"."company"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."council_application"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."council_application_receipt"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."driver"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Driver applications can be viewed by anyone as long as they hav"
on "public"."driver_application"
as permissive
for all
to authenticated, anon
using (true);


create policy "Enable all functionality for users based on auth_id"
on "public"."drivers_licence"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."drivers_taxi_badge"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."employee"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."hire_agreement"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."insurance"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."picture"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."rent"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."taxi"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."taxi_licence"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));


create policy "Enable all functionality for users based on auth_id"
on "public"."vehicle"
as permissive
for all
to authenticated
using ((( SELECT auth.uid() AS uid) = auth_id))
with check ((( SELECT auth.uid() AS uid) = auth_id));



